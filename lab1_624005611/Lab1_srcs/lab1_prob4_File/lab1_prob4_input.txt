10000000 Expected Output: 00000101
00100000 Expected Output: 00000011
00100001 Expected Output: 00000011
00110001 Expected Output: 00000011
00001110 Expected Output: 00000000

/*
 ************************************************ MUST READ *****************************************************
 *
 * In the framework, since the while loop occurs in main, the "read_inputs_from_ip_if()" functions gets triggered
 * n times. Within the "read_inputs_from_ip_if()" function, the program only reads one line at a time. If the while
 * loop was inside the "read_inputs_from_ip_if()" function, then the read command would loop through the input file
 * line per line -- this is not the case. If this was the case, the output would still only generate an output file
 * with only one case at a time. Therefore...
 *
 * Instructions to read input file:
 *	- Each cases must be read each time the program is ran
 *	- For example
 *		- The first case is 10000000 with an expected output of 011 and is in line 1 of the file
 *		- To run the second case (00100000), exit the program and edit this input file so that
 *		  the second case would now be in line 1 of this file instead of line 2.
 *		- To run the third case (00100001), exit the program and edit this input file so that
 *		  the third case would now be in line 1 of this file instead of line 3.
 *		- So on and so forth...
 *	- There are 5 test cases, therefore the program needs to be ran 5 times.
 *	- The output file should generate different results each run, so the output file needs to be checked each
 *	  time the program is ran
 *	  
 * Extra notes:
 * The input order is in:
 *	- car_moving, brake_pedal, driver_lock_closed, key_in_car, doors_closed, engine_running, driver_seat_belt_fastened, driver_on_seat
*/